//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import RswiftResources
import UIKit

private class BundleFinder {}
let R = _R(bundle: Bundle(for: BundleFinder.self))

struct _R {
  let bundle: Foundation.Bundle

  let entitlements = entitlements()
  let reuseIdentifier = reuseIdentifier()

  var color: color { .init(bundle: bundle) }
  var image: image { .init(bundle: bundle) }
  var font: font { .init(bundle: bundle) }
  var file: file { .init(bundle: bundle) }
  var nib: nib { .init(bundle: bundle) }
  var storyboard: storyboard { .init(bundle: bundle) }

  func color(bundle: Foundation.Bundle) -> color {
    .init(bundle: bundle)
  }
  func image(bundle: Foundation.Bundle) -> image {
    .init(bundle: bundle)
  }
  func font(bundle: Foundation.Bundle) -> font {
    .init(bundle: bundle)
  }
  func file(bundle: Foundation.Bundle) -> file {
    .init(bundle: bundle)
  }
  func nib(bundle: Foundation.Bundle) -> nib {
    .init(bundle: bundle)
  }
  func storyboard(bundle: Foundation.Bundle) -> storyboard {
    .init(bundle: bundle)
  }
  func validate() throws {
    try self.font.validate()
    try self.nib.validate()
    try self.storyboard.validate()
  }

  struct project {
    let developmentRegion = "en"
  }

  /// This `_R.color` struct is generated, and contains static references to 1 colors.
  struct color {
    let bundle: Foundation.Bundle

    /// Color `viewColor`.
    var viewColor: RswiftResources.ColorResource { .init(name: "viewColor", path: [], bundle: bundle) }
  }

  /// This `_R.image` struct is generated, and contains static references to 97 images.
  struct image {
    let bundle: Foundation.Bundle

    /// Image `CLARO`.
    var clarO: RswiftResources.ImageResource { .init(name: "CLARO", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `CNT`.
    var cnT: RswiftResources.ImageResource { .init(name: "CNT", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `MOVISTAR`.
    var movistaR: RswiftResources.ImageResource { .init(name: "MOVISTAR", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `agendaIcon`.
    var agendaIcon: RswiftResources.ImageResource { .init(name: "agendaIcon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ax`.
    var ax: RswiftResources.ImageResource { .init(name: "ax", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `backIcon`.
    var backIcon: RswiftResources.ImageResource { .init(name: "backIcon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `bill`.
    var bill: RswiftResources.ImageResource { .init(name: "bill", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `calendar`.
    var calendar: RswiftResources.ImageResource { .init(name: "calendar", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `callCenter`.
    var callCenter: RswiftResources.ImageResource { .init(name: "callCenter", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `camera`.
    var camera: RswiftResources.ImageResource { .init(name: "camera", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `camion_icon`.
    var camion_icon: RswiftResources.ImageResource { .init(name: "camion_icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `camioneta_icon`.
    var camioneta_icon: RswiftResources.ImageResource { .init(name: "camioneta_icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `cancelar`.
    var cancelar: RswiftResources.ImageResource { .init(name: "cancelar", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `chofer`.
    var chofer: RswiftResources.ImageResource { .init(name: "chofer", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `clave`.
    var clave: RswiftResources.ImageResource { .init(name: "clave", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `close`.
    var close: RswiftResources.ImageResource { .init(name: "close", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `compartir`.
    var compartir: RswiftResources.ImageResource { .init(name: "compartir", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `contactname`.
    var contactname: RswiftResources.ImageResource { .init(name: "contactname", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `contactoIcon`.
    var contactoIcon: RswiftResources.ImageResource { .init(name: "contactoIcon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `contactphone`.
    var contactphone: RswiftResources.ImageResource { .init(name: "contactphone", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `costo`.
    var costo: RswiftResources.ImageResource { .init(name: "costo", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `dc`.
    var dc: RswiftResources.ImageResource { .init(name: "dc", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `destino`.
    var destino: RswiftResources.ImageResource { .init(name: "destino", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `destinoIcon`.
    var destinoIcon: RswiftResources.ImageResource { .init(name: "destinoIcon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `detalleIcon`.
    var detalleIcon: RswiftResources.ImageResource { .init(name: "detalleIcon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `detalles`.
    var detalles: RswiftResources.ImageResource { .init(name: "detalles", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `di`.
    var di: RswiftResources.ImageResource { .init(name: "di", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `distancia`.
    var distancia: RswiftResources.ImageResource { .init(name: "distancia", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `down`.
    var down: RswiftResources.ImageResource { .init(name: "down", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `driverIcon`.
    var driverIcon: RswiftResources.ImageResource { .init(name: "driverIcon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `el`.
    var el: RswiftResources.ImageResource { .init(name: "el", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `enProceso`.
    var enProceso: RswiftResources.ImageResource { .init(name: "enProceso", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `evaluar`.
    var evaluar: RswiftResources.ImageResource { .init(name: "evaluar", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `header`.
    var header: RswiftResources.ImageResource { .init(name: "header", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `hideClave`.
    var hideClave: RswiftResources.ImageResource { .init(name: "hideClave", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `historial`.
    var historial: RswiftResources.ImageResource { .init(name: "historial", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `home`.
    var home: RswiftResources.ImageResource { .init(name: "home", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `jc`.
    var jc: RswiftResources.ImageResource { .init(name: "jc", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `launch`.
    var launch: RswiftResources.ImageResource { .init(name: "launch", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `llamar`.
    var llamar: RswiftResources.ImageResource { .init(name: "llamar", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `loadingGif`.
    var loadingGif: RswiftResources.ImageResource { .init(name: "loadingGif", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `locationBtn`.
    var locationBtn: RswiftResources.ImageResource { .init(name: "locationBtn", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `login`.
    var login: RswiftResources.ImageResource { .init(name: "login", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `logo`.
    var logo: RswiftResources.ImageResource { .init(name: "logo", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mapIcon`.
    var mapIcon: RswiftResources.ImageResource { .init(name: "mapIcon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mapLocation`.
    var mapLocation: RswiftResources.ImageResource { .init(name: "mapLocation", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mc`.
    var mc: RswiftResources.ImageResource { .init(name: "mc", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mensajes`.
    var mensajes: RswiftResources.ImageResource { .init(name: "mensajes", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mensajesnew`.
    var mensajesnew: RswiftResources.ImageResource { .init(name: "mensajesnew", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `menu`.
    var menu: RswiftResources.ImageResource { .init(name: "menu", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `next`.
    var next: RswiftResources.ImageResource { .init(name: "next", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `nuevaSolicitud`.
    var nuevaSolicitud: RswiftResources.ImageResource { .init(name: "nuevaSolicitud", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ofertaIcon`.
    var ofertaIcon: RswiftResources.ImageResource { .init(name: "ofertaIcon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `origen`.
    var origen: RswiftResources.ImageResource { .init(name: "origen", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `origenIcon`.
    var origenIcon: RswiftResources.ImageResource { .init(name: "origenIcon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `panicoBtn`.
    var panicoBtn: RswiftResources.ImageResource { .init(name: "panicoBtn", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `panicoIcon`.
    var panicoIcon: RswiftResources.ImageResource { .init(name: "panicoIcon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `publicidadBanner`.
    var publicidadBanner: RswiftResources.ImageResource { .init(name: "publicidadBanner", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `referenciaIcon`.
    var referenciaIcon: RswiftResources.ImageResource { .init(name: "referenciaIcon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `remove`.
    var remove: RswiftResources.ImageResource { .init(name: "remove", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `salir2`.
    var salir2: RswiftResources.ImageResource { .init(name: "salir2", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `search`.
    var search: RswiftResources.ImageResource { .init(name: "search", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `sesion`.
    var sesion: RswiftResources.ImageResource { .init(name: "sesion", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `showClave`.
    var showClave: RswiftResources.ImageResource { .init(name: "showClave", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `smsvoz`.
    var smsvoz: RswiftResources.ImageResource { .init(name: "smsvoz", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `smsvozRec`.
    var smsvozRec: RswiftResources.ImageResource { .init(name: "smsvozRec", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `so`.
    var so: RswiftResources.ImageResource { .init(name: "so", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `sosAmbulancia`.
    var sosAmbulancia: RswiftResources.ImageResource { .init(name: "sosAmbulancia", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `sosBombero`.
    var sosBombero: RswiftResources.ImageResource { .init(name: "sosBombero", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `sosBtn`.
    var sosBtn: RswiftResources.ImageResource { .init(name: "sosBtn", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `sosLogo`.
    var sosLogo: RswiftResources.ImageResource { .init(name: "sosLogo", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `sosPolicia`.
    var sosPolicia: RswiftResources.ImageResource { .init(name: "sosPolicia", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `sosTransito`.
    var sosTransito: RswiftResources.ImageResource { .init(name: "sosTransito", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `stardorada`.
    var stardorada: RswiftResources.ImageResource { .init(name: "stardorada", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `stargris`.
    var stargris: RswiftResources.ImageResource { .init(name: "stargris", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `tabBottom`.
    var tabBottom: RswiftResources.ImageResource { .init(name: "tabBottom", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `tarjetaIcon`.
    var tarjetaIcon: RswiftResources.ImageResource { .init(name: "tarjetaIcon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `tarjetaMenu`.
    var tarjetaMenu: RswiftResources.ImageResource { .init(name: "tarjetaMenu", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `taxiIcon`.
    var taxiIcon: RswiftResources.ImageResource { .init(name: "taxiIcon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `taxi_libre`.
    var taxi_libre: RswiftResources.ImageResource { .init(name: "taxi_libre", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `terminos`.
    var terminos: RswiftResources.ImageResource { .init(name: "terminos", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `tiempo`.
    var tiempo: RswiftResources.ImageResource { .init(name: "tiempo", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `tipoHoras`.
    var tipoHoras: RswiftResources.ImageResource { .init(name: "tipoHoras", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `tipoOferta`.
    var tipoOferta: RswiftResources.ImageResource { .init(name: "tipoOferta", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `tipoPactada`.
    var tipoPactada: RswiftResources.ImageResource { .init(name: "tipoPactada", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `tipoTaximetro`.
    var tipoTaximetro: RswiftResources.ImageResource { .init(name: "tipoTaximetro", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `up`.
    var up: RswiftResources.ImageResource { .init(name: "up", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `userPhoto`.
    var userPhoto: RswiftResources.ImageResource { .init(name: "userPhoto", path: [], bundle: bundle, locale: LocaleReference.none, onDemandResourceTags: nil) }

    /// Image `vi`.
    var vi: RswiftResources.ImageResource { .init(name: "vi", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `voucherIcon`.
    var voucherIcon: RswiftResources.ImageResource { .init(name: "voucherIcon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `whatsapp`.
    var whatsapp: RswiftResources.ImageResource { .init(name: "whatsapp", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `whatsappBtn`.
    var whatsappBtn: RswiftResources.ImageResource { .init(name: "whatsappBtn", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `xoalogo`.
    var xoalogo: RswiftResources.ImageResource { .init(name: "xoalogo", path: [], bundle: bundle, locale: LocaleReference.none, onDemandResourceTags: nil) }

    /// Image `xoalogo1`.
    var xoalogo1: RswiftResources.ImageResource { .init(name: "xoalogo1", path: [], bundle: bundle, locale: LocaleReference.none, onDemandResourceTags: nil) }

    /// Image `yapaCodeIcon`.
    var yapaCodeIcon: RswiftResources.ImageResource { .init(name: "yapaCodeIcon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `yapaIcon`.
    var yapaIcon: RswiftResources.ImageResource { .init(name: "yapaIcon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `yapaImg`.
    var yapaImg: RswiftResources.ImageResource { .init(name: "yapaImg", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }
  }

  /// This `_R.entitlements` struct is generated, and contains static references to 1 properties.
  struct entitlements {
    let comAppleDeveloperUserFonts = comAppleDeveloperUserFonts()
    struct comAppleDeveloperUserFonts {
    }
  }

  /// This `_R.font` struct is generated, and contains static references to 10 fonts.
  struct font: Sequence {
    let bundle: Foundation.Bundle

    /// Font `Muli`.
    var muli: RswiftResources.FontResource { .init(name: "Muli", bundle: bundle, filename: "Muli.ttf") }

    /// Font `Muli-Bold`.
    var muliBold: RswiftResources.FontResource { .init(name: "Muli-Bold", bundle: bundle, filename: "Muli-Bold.ttf") }

    /// Font `Muli-BoldItalic`.
    var muliBoldItalic: RswiftResources.FontResource { .init(name: "Muli-BoldItalic", bundle: bundle, filename: "Muli-BoldItalic.ttf") }

    /// Font `Muli-ExtraLight`.
    var muliExtraLight: RswiftResources.FontResource { .init(name: "Muli-ExtraLight", bundle: bundle, filename: "Muli-ExtraLight.ttf") }

    /// Font `Muli-ExtraLightItalic`.
    var muliExtraLightItalic: RswiftResources.FontResource { .init(name: "Muli-ExtraLightItalic", bundle: bundle, filename: "Muli-ExtraLightItalic.ttf") }

    /// Font `Muli-Italic`.
    var muliItalic: RswiftResources.FontResource { .init(name: "Muli-Italic", bundle: bundle, filename: "Muli-Italic.ttf") }

    /// Font `Muli-Light`.
    var muliLight: RswiftResources.FontResource { .init(name: "Muli-Light", bundle: bundle, filename: "Muli-Light.ttf") }

    /// Font `Muli-LightItalic`.
    var muliLightItalic: RswiftResources.FontResource { .init(name: "Muli-LightItalic", bundle: bundle, filename: "Muli-LightItalic.ttf") }

    /// Font `Muli-Semi-BoldItalic`.
    var muliSemiBoldItalic: RswiftResources.FontResource { .init(name: "Muli-Semi-BoldItalic", bundle: bundle, filename: "Muli-Semi-BoldItalic.ttf") }

    /// Font `Muli-SemiBold`.
    var muliSemiBold: RswiftResources.FontResource { .init(name: "Muli-SemiBold", bundle: bundle, filename: "Muli-SemiBold.ttf") }

    func makeIterator() -> IndexingIterator<[RswiftResources.FontResource]> {
      [muli, muliBold, muliBoldItalic, muliExtraLight, muliExtraLightItalic, muliItalic, muliLight, muliLightItalic, muliSemiBoldItalic, muliSemiBold].makeIterator()
    }
    func validate() throws {
      for font in self {
        if !font.canBeLoaded() { throw RswiftResources.ValidationError("[R.swift] Font '\(font.name)' could not be loaded, is '\(font.filename)' added to the UIAppFonts array in this targets Info.plist?") }
      }
    }
  }

  /// This `_R.file` struct is generated, and contains static references to 19 resource files.
  struct file {
    let bundle: Foundation.Bundle

    /// Resource file `.gitignore`.
    var gitignore: RswiftResources.FileResource { .init(name: ".gitignore", pathExtension: "", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `DS-DIGII.TTF`.
    var dsdigiittF: RswiftResources.FileResource { .init(name: "DS-DIGII", pathExtension: "TTF", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Entitlements.plist`.
    var entitlementsPlist: RswiftResources.FileResource { .init(name: "Entitlements", pathExtension: "plist", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Muli-Bold.ttf`.
    var muliBoldTtf: RswiftResources.FileResource { .init(name: "Muli-Bold", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Muli-BoldItalic.ttf`.
    var muliBoldItalicTtf: RswiftResources.FileResource { .init(name: "Muli-BoldItalic", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Muli-ExtraLight.ttf`.
    var muliExtraLightTtf: RswiftResources.FileResource { .init(name: "Muli-ExtraLight", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Muli-ExtraLightItalic.ttf`.
    var muliExtraLightItalicTtf: RswiftResources.FileResource { .init(name: "Muli-ExtraLightItalic", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Muli-Italic.ttf`.
    var muliItalicTtf: RswiftResources.FileResource { .init(name: "Muli-Italic", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Muli-Light.ttf`.
    var muliLightTtf: RswiftResources.FileResource { .init(name: "Muli-Light", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Muli-LightItalic.ttf`.
    var muliLightItalicTtf: RswiftResources.FileResource { .init(name: "Muli-LightItalic", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Muli-Semi-BoldItalic.ttf`.
    var muliSemiBoldItalicTtf: RswiftResources.FileResource { .init(name: "Muli-Semi-BoldItalic", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Muli-SemiBold.ttf`.
    var muliSemiBoldTtf: RswiftResources.FileResource { .init(name: "Muli-SemiBold", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Muli.ttf`.
    var muliTtf: RswiftResources.FileResource { .init(name: "Muli", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `beep.wav`.
    var beepWav: RswiftResources.FileResource { .init(name: "beep", pathExtension: "wav", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `claxon.mp3`.
    var claxonMp3: RswiftResources.FileResource { .init(name: "claxon", pathExtension: "mp3", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `ds_digital`.
    var ds_digital: RswiftResources.FileResource { .init(name: "ds_digital", pathExtension: "", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `userPhoto.png`.
    var userPhotoPng: RswiftResources.FileResource { .init(name: "userPhoto", pathExtension: "png", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `xoalogo.png`.
    var xoalogoPng: RswiftResources.FileResource { .init(name: "xoalogo", pathExtension: "png", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `xoalogo1.png`.
    var xoalogo1Png: RswiftResources.FileResource { .init(name: "xoalogo1", pathExtension: "png", bundle: bundle, locale: LocaleReference.none) }
  }

  /// This `_R.nib` struct is generated, and contains static references to 19 nibs.
  struct nib {
    let bundle: Foundation.Bundle

    /// Nib `CallCenterViewCell`.
    var callCenterViewCell: RswiftResources.NibReferenceReuseIdentifier<CallCenterViewCell, CallCenterViewCell> { .init(name: "CallCenterViewCell", bundle: bundle, identifier: "CallCenterViewCell") }

    /// Nib `CardRow`.
    var cardRow: RswiftResources.NibReference<CardViewCell> { .init(name: "CardRow", bundle: bundle) }

    /// Nib `ContactoCell`.
    var contactoCell: RswiftResources.NibReference<ContactoViewCell> { .init(name: "ContactoCell", bundle: bundle) }

    /// Nib `DestinoCell`.
    var destinoCell: RswiftResources.NibReference<DestinoCell> { .init(name: "DestinoCell", bundle: bundle) }

    /// Nib `DetallesViewCell`.
    var detallesViewCell: RswiftResources.NibReference<UIKit.UIView> { .init(name: "DetallesViewCell", bundle: bundle) }

    /// Nib `HistoryViewCell`.
    var historyViewCell: RswiftResources.NibReference<HistoryCell> { .init(name: "HistoryViewCell", bundle: bundle) }

    /// Nib `OfertaCell`.
    var ofertaCell: RswiftResources.NibReferenceReuseIdentifier<OfertaViewCell, OfertaViewCell> { .init(name: "OfertaCell", bundle: bundle, identifier: "OfertaCell") }

    /// Nib `OfertaDataCell`.
    var ofertaDataCell: RswiftResources.NibReference<OfertaDataViewCell> { .init(name: "OfertaDataCell", bundle: bundle) }

    /// Nib `OrigenCell`.
    var origenCell: RswiftResources.NibReference<OrigenViewCell> { .init(name: "OrigenCell", bundle: bundle) }

    /// Nib `PactadaCell`.
    var pactadaCell: RswiftResources.NibReference<PactadaCell> { .init(name: "PactadaCell", bundle: bundle) }

    /// Nib `PagoCell`.
    var pagoCell: RswiftResources.NibReference<PagoViewCell> { .init(name: "PagoCell", bundle: bundle) }

    /// Nib `PagoYapaViewCell`.
    var pagoYapaViewCell: RswiftResources.NibReference<PagoYapaCell> { .init(name: "PagoYapaViewCell", bundle: bundle) }

    /// Nib `Perfil2ViewCell`.
    var perfil2ViewCell: RswiftResources.NibReference<Perfil2ViewCell> { .init(name: "Perfil2ViewCell", bundle: bundle) }

    /// Nib `Perfil3ViewCell`.
    var perfil3ViewCell: RswiftResources.NibReference<Perfil3ViewCell> { .init(name: "Perfil3ViewCell", bundle: bundle) }

    /// Nib `PerfilNombreCell`.
    var perfilNombreCell: RswiftResources.NibReferenceReuseIdentifier<PerfilNombreCell, PerfilNombreCell> { .init(name: "PerfilNombreCell", bundle: bundle, identifier: "PerfilNombreCell") }

    /// Nib `PerfilViewCell`.
    var perfilViewCell: RswiftResources.NibReferenceReuseIdentifier<PerfilViewCell, PerfilViewCell> { .init(name: "PerfilViewCell", bundle: bundle, identifier: "PerfilViewCell") }

    /// Nib `SolPendientesCell`.
    var solPendientesCell: RswiftResources.NibReference<SolPendientesViewCell> { .init(name: "SolPendientesCell", bundle: bundle) }

    /// Nib `SOSCollectionViewCell`.
    var sosCollectionViewCell: RswiftResources.NibReference<UIKit.UIView> { .init(name: "SOSCollectionViewCell", bundle: bundle) }

    /// Nib `YapaViewCell`.
    var yapaViewCell: RswiftResources.NibReference<YapaCell> { .init(name: "YapaViewCell", bundle: bundle) }

    func validate() throws {
      if UIKit.UIImage(named: "whatsappBtn", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'whatsappBtn' is used in nib 'CallCenterViewCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "remove", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'remove' is used in nib 'CardRow', but couldn't be loaded.") }
      if UIKit.UIImage(named: "contactname", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'contactname' is used in nib 'ContactoCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "contactoIcon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'contactoIcon' is used in nib 'ContactoCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "contactphone", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'contactphone' is used in nib 'ContactoCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "destinoIcon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'destinoIcon' is used in nib 'DestinoCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "chofer", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'chofer' is used in nib 'DetallesViewCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "stardorada", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'stardorada' is used in nib 'DetallesViewCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "calendar", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'calendar' is used in nib 'HistoryViewCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "destinoIcon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'destinoIcon' is used in nib 'HistoryViewCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "ofertaIcon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'ofertaIcon' is used in nib 'HistoryViewCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "origenIcon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'origenIcon' is used in nib 'HistoryViewCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "stardorada", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'stardorada' is used in nib 'OfertaCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "ofertaIcon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'ofertaIcon' is used in nib 'OfertaDataCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "origenIcon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'origenIcon' is used in nib 'OrigenCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "voucherIcon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'voucherIcon' is used in nib 'PactadaCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "ofertaIcon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'ofertaIcon' is used in nib 'PagoCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "referenciaIcon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'referenciaIcon' is used in nib 'PagoCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "yapaIcon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'yapaIcon' is used in nib 'PagoYapaViewCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "showClave", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'showClave' is used in nib 'Perfil3ViewCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "next", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'next' is used in nib 'YapaViewCell', but couldn't be loaded.") }
    }
  }

  /// This `_R.reuseIdentifier` struct is generated, and contains static references to 9 reuse identifiers.
  struct reuseIdentifier {

    /// Reuse identifier `CallCenterViewCell`.
    let callCenterViewCell: RswiftResources.ReuseIdentifier<CallCenterViewCell> = .init(identifier: "CallCenterViewCell")

    /// Reuse identifier `CELL`.
    let celL: RswiftResources.ReuseIdentifier<UIKit.UITableViewCell> = .init(identifier: "CELL")

    /// Reuse identifier `ComentarioCell`.
    let comentarioCell: RswiftResources.ReuseIdentifier<ComentarioCollectionCell> = .init(identifier: "ComentarioCell")

    /// Reuse identifier `MENUCELL`.
    let menucelL: RswiftResources.ReuseIdentifier<UIKit.UITableViewCell> = .init(identifier: "MENUCELL")

    /// Reuse identifier `OfertaCell`.
    let ofertaCell: RswiftResources.ReuseIdentifier<OfertaViewCell> = .init(identifier: "OfertaCell")

    /// Reuse identifier `PerfilNombreCell`.
    let perfilNombreCell: RswiftResources.ReuseIdentifier<PerfilNombreCell> = .init(identifier: "PerfilNombreCell")

    /// Reuse identifier `PerfilViewCell`.
    let perfilViewCell: RswiftResources.ReuseIdentifier<PerfilViewCell> = .init(identifier: "PerfilViewCell")

    /// Reuse identifier `Solicitudes`.
    let solicitudes: RswiftResources.ReuseIdentifier<UIKit.UITableViewCell> = .init(identifier: "Solicitudes")

    /// Reuse identifier `sosBtn`.
    let sosBtn: RswiftResources.ReuseIdentifier<SOSCollectionCell> = .init(identifier: "sosBtn")
  }

  /// This `_R.storyboard` struct is generated, and contains static references to 4 storyboards.
  struct storyboard {
    let bundle: Foundation.Bundle
    var andyLaunchScreen: andyLaunchScreen { .init(bundle: bundle) }
    var launchScreen: launchScreen { .init(bundle: bundle) }
    var login: login { .init(bundle: bundle) }
    var main: main { .init(bundle: bundle) }

    func andyLaunchScreen(bundle: Foundation.Bundle) -> andyLaunchScreen {
      .init(bundle: bundle)
    }
    func launchScreen(bundle: Foundation.Bundle) -> launchScreen {
      .init(bundle: bundle)
    }
    func login(bundle: Foundation.Bundle) -> login {
      .init(bundle: bundle)
    }
    func main(bundle: Foundation.Bundle) -> main {
      .init(bundle: bundle)
    }
    func validate() throws {
      try self.andyLaunchScreen.validate()
      try self.launchScreen.validate()
      try self.login.validate()
      try self.main.validate()
    }


    /// Storyboard `Andy Launch Screen`.
    struct andyLaunchScreen: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UIViewController

      let bundle: Foundation.Bundle

      let name = "Andy Launch Screen"
      func validate() throws {
        if UIKit.UIImage(named: "LaunchImg", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'LaunchImg' is used in storyboard 'Andy Launch Screen', but couldn't be loaded.") }
      }
    }

    /// Storyboard `Launch Screen`.
    struct launchScreen: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UIViewController

      let bundle: Foundation.Bundle

      let name = "Launch Screen"
      func validate() throws {
        if UIKit.UIImage(named: "launch", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'launch' is used in storyboard 'Launch Screen', but couldn't be loaded.") }
      }
    }

    /// Storyboard `Login`.
    struct login: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UINavigationController

      let bundle: Foundation.Bundle

      let name = "Login"

      var loginView: RswiftResources.StoryboardViewControllerIdentifier<LoginController> { .init(identifier: "LoginView", storyboard: name, bundle: bundle) }
      var registroView: RswiftResources.StoryboardViewControllerIdentifier<RegistroController> { .init(identifier: "registroView", storyboard: name, bundle: bundle) }
      var verificationView: RswiftResources.StoryboardViewControllerIdentifier<RegisterValidationController> { .init(identifier: "verificationView", storyboard: name, bundle: bundle) }

      func validate() throws {
        if UIKit.UIImage(named: "close", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'close' is used in storyboard 'Login', but couldn't be loaded.") }
        if UIKit.UIImage(named: "launch", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'launch' is used in storyboard 'Login', but couldn't be loaded.") }
        if UIKit.UIImage(named: "login", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'login' is used in storyboard 'Login', but couldn't be loaded.") }
        if UIKit.UIImage(named: "showClave", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'showClave' is used in storyboard 'Login', but couldn't be loaded.") }
        if UIKit.UIImage(named: "xoalogo.png", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'xoalogo.png' is used in storyboard 'Login', but couldn't be loaded.") }
        if loginView() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'loginView' could not be loaded from storyboard 'Login' as 'LoginController'.") }
        if registroView() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'registroView' could not be loaded from storyboard 'Login' as 'RegistroController'.") }
        if verificationView() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'verificationView' could not be loaded from storyboard 'Login' as 'RegisterValidationController'.") }
      }
    }

    /// Storyboard `Main`.
    struct main: RswiftResources.StoryboardReference {
      let bundle: Foundation.Bundle

      let name = "Main"

      var addressView: RswiftResources.StoryboardViewControllerIdentifier<AddressController> { .init(identifier: "AddressView", storyboard: name, bundle: bundle) }
      var callCenter: RswiftResources.StoryboardViewControllerIdentifier<CallCenterController> { .init(identifier: "callCenter", storyboard: name, bundle: bundle) }
      var completadaView: RswiftResources.StoryboardViewControllerIdentifier<CompletadaController> { .init(identifier: "completadaView", storyboard: name, bundle: bundle) }
      var esperaChildView: RswiftResources.StoryboardViewControllerIdentifier<EsperaChildVC> { .init(identifier: "esperaChildView", storyboard: name, bundle: bundle) }
      var historyDetailView: RswiftResources.StoryboardViewControllerIdentifier<HistorialDetailsController> { .init(identifier: "historyDetailView", storyboard: name, bundle: bundle) }
      var historyView: RswiftResources.StoryboardViewControllerIdentifier<HistorialController> { .init(identifier: "historyView", storyboard: name, bundle: bundle) }
      var inicioNavController: RswiftResources.StoryboardViewControllerIdentifier<UIKit.UINavigationController> { .init(identifier: "InicioNavController", storyboard: name, bundle: bundle) }
      var inicioView: RswiftResources.StoryboardViewControllerIdentifier<InicioController> { .init(identifier: "InicioView", storyboard: name, bundle: bundle) }
      var listaSolPdtes: RswiftResources.StoryboardViewControllerIdentifier<SolicitudesTableController> { .init(identifier: "ListaSolPdtes", storyboard: name, bundle: bundle) }
      var menuView: RswiftResources.StoryboardViewControllerIdentifier<SideMenuController> { .init(identifier: "MenuView", storyboard: name, bundle: bundle) }
      var ofertasView: RswiftResources.StoryboardViewControllerIdentifier<OfertasController> { .init(identifier: "ofertasView", storyboard: name, bundle: bundle) }
      var pagoViewVC: RswiftResources.StoryboardViewControllerIdentifier<PagoController> { .init(identifier: "PagoViewVC", storyboard: name, bundle: bundle) }
      var panicoChildVC: RswiftResources.StoryboardViewControllerIdentifier<PanicoController> { .init(identifier: "panicoChildVC", storyboard: name, bundle: bundle) }
      var password: RswiftResources.StoryboardViewControllerIdentifier<PassController> { .init(identifier: "Password", storyboard: name, bundle: bundle) }
      var perfil: RswiftResources.StoryboardViewControllerIdentifier<PerfilController> { .init(identifier: "Perfil", storyboard: name, bundle: bundle) }
      var solDetalles: RswiftResources.StoryboardViewControllerIdentifier<SolPendController> { .init(identifier: "SolDetalles", storyboard: name, bundle: bundle) }
      var solicitudPanel: RswiftResources.StoryboardViewControllerIdentifier<SolicitudPanel> { .init(identifier: "SolicitudPanel", storyboard: name, bundle: bundle) }
      var terminosView: RswiftResources.StoryboardViewControllerIdentifier<TerminosController> { .init(identifier: "terminosView", storyboard: name, bundle: bundle) }
      var yapaPanel: RswiftResources.StoryboardViewControllerIdentifier<YapaPanel> { .init(identifier: "YapaPanel", storyboard: name, bundle: bundle) }
      var yapaView: RswiftResources.StoryboardViewControllerIdentifier<YapaController> { .init(identifier: "YapaView", storyboard: name, bundle: bundle) }

      func validate() throws {
        if UIKit.UIImage(named: "agendaIcon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'agendaIcon' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "calendar", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'calendar' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "camera", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'camera' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "cancelar", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'cancelar' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "chofer", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'chofer' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "close", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'close' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "compartir", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'compartir' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "destinoIcon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'destinoIcon' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "distancia", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'distancia' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "down", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'down' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "llamar", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'llamar' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "locationBtn", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'locationBtn' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "logo", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'logo' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mensajes", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mensajes' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "ofertaIcon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'ofertaIcon' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "origen", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'origen' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "origenIcon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'origenIcon' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "panicoIcon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'panicoIcon' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "referenciaIcon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'referenciaIcon' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "showClave", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'showClave' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "smsvoz", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'smsvoz' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "sosLogo", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'sosLogo' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "stardorada", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'stardorada' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "stargris", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'stargris' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "tarjetaMenu", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'tarjetaMenu' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "up", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'up' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "whatsapp", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'whatsapp' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "yapaIcon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'yapaIcon' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "yapaImg", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'yapaImg' is used in storyboard 'Main', but couldn't be loaded.") }
        if addressView() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'addressView' could not be loaded from storyboard 'Main' as 'AddressController'.") }
        if inicioNavController() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'inicioNavController' could not be loaded from storyboard 'Main' as 'UIKit.UINavigationController'.") }
        if inicioView() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'inicioView' could not be loaded from storyboard 'Main' as 'InicioController'.") }
        if listaSolPdtes() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'listaSolPdtes' could not be loaded from storyboard 'Main' as 'SolicitudesTableController'.") }
        if menuView() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'menuView' could not be loaded from storyboard 'Main' as 'SideMenuController'.") }
        if pagoViewVC() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'pagoViewVC' could not be loaded from storyboard 'Main' as 'PagoController'.") }
        if password() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'password' could not be loaded from storyboard 'Main' as 'PassController'.") }
        if perfil() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'perfil' could not be loaded from storyboard 'Main' as 'PerfilController'.") }
        if solDetalles() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'solDetalles' could not be loaded from storyboard 'Main' as 'SolPendController'.") }
        if solicitudPanel() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'solicitudPanel' could not be loaded from storyboard 'Main' as 'SolicitudPanel'.") }
        if yapaPanel() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'yapaPanel' could not be loaded from storyboard 'Main' as 'YapaPanel'.") }
        if yapaView() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'yapaView' could not be loaded from storyboard 'Main' as 'YapaController'.") }
        if callCenter() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'callCenter' could not be loaded from storyboard 'Main' as 'CallCenterController'.") }
        if completadaView() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'completadaView' could not be loaded from storyboard 'Main' as 'CompletadaController'.") }
        if esperaChildView() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'esperaChildView' could not be loaded from storyboard 'Main' as 'EsperaChildVC'.") }
        if historyDetailView() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'historyDetailView' could not be loaded from storyboard 'Main' as 'HistorialDetailsController'.") }
        if historyView() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'historyView' could not be loaded from storyboard 'Main' as 'HistorialController'.") }
        if ofertasView() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'ofertasView' could not be loaded from storyboard 'Main' as 'OfertasController'.") }
        if panicoChildVC() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'panicoChildVC' could not be loaded from storyboard 'Main' as 'PanicoController'.") }
        if terminosView() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'terminosView' could not be loaded from storyboard 'Main' as 'TerminosController'.") }
      }
    }
  }
}